--a_graycounter DEVICE_FAMILY="Cyclone II" WIDTH=11 aclr clock cnt_en q
--VERSION_BEGIN 7.2 cbx_a_gray2bin 2006:02:28:14:37:30:SJ cbx_a_graycounter 2007:02:22:13:58:22:SJ cbx_cycloneii 2007:06:13:15:47:32:SJ cbx_flex10ke 2006:01:09:11:13:48:SJ cbx_mgl 2007:08:03:15:48:12:SJ cbx_stratix 2007:05:02:16:27:14:SJ cbx_stratixii 2007:06:28:17:26:26:SJ  VERSION_END


-- Copyright (C) 1991-2007 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION cycloneii_lcell_comb (cin, dataa, datab, datac, datad)
WITH ( LUT_MASK, SUM_LUTC_INPUT)
RETURNS ( combout, cout);

--synthesis_resources = lut 12 reg 12 
SUBDESIGN a_graycounter_p96
( 
	aclr	:	input;
	clock	:	input;
	cnt_en	:	input;
	q[10..0]	:	output;
) 
VARIABLE 
	countera0 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "C6A0",
			SUM_LUTC_INPUT = "cin"
		);
	countera1 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "6C50",
			SUM_LUTC_INPUT = "cin"
		);
	countera2 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "6C50",
			SUM_LUTC_INPUT = "cin"
		);
	countera3 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "6C50",
			SUM_LUTC_INPUT = "cin"
		);
	countera4 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "6C50",
			SUM_LUTC_INPUT = "cin"
		);
	countera5 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "6C50",
			SUM_LUTC_INPUT = "cin"
		);
	countera6 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "6C50",
			SUM_LUTC_INPUT = "cin"
		);
	countera7 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "6C50",
			SUM_LUTC_INPUT = "cin"
		);
	countera8 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "6C50",
			SUM_LUTC_INPUT = "cin"
		);
	countera9 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "6C50",
			SUM_LUTC_INPUT = "cin"
		);
	countera10 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A5A",
			SUM_LUTC_INPUT = "cin"
		);
	parity : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "6628",
			SUM_LUTC_INPUT = "cin"
		);
	counter_ffa[10..0] : dffeas;
	parity_ff : dffeas;
	sclr	: NODE;
	updown	: NODE;

BEGIN 
	countera[10..0].cin = ( countera[9..0].cout, parity.cout);
	countera[10..0].dataa = ( counter_ffa[10].q, counter_ffa[8..0].q, cnt_en);
	countera[0].datab = counter_ffa[0].q;
	countera[1].datab = counter_ffa[1].q;
	countera[2].datab = counter_ffa[2].q;
	countera[3].datab = counter_ffa[3].q;
	countera[4].datab = counter_ffa[4].q;
	countera[5].datab = counter_ffa[5].q;
	countera[6].datab = counter_ffa[6].q;
	countera[7].datab = counter_ffa[7].q;
	countera[8].datab = counter_ffa[8].q;
	countera[9].datab = counter_ffa[9].q;
	countera[10..0].datad = B"11111111111";
	parity.cin = (! updown);
	parity.dataa = cnt_en;
	parity.datab = parity_ff.q;
	parity.datad = B"1";
	counter_ffa[].clk = clock;
	counter_ffa[].clrn = ( (! aclr), (! aclr), (! aclr), (! aclr), (! aclr), (! aclr), (! aclr), (! aclr), (! aclr), (! aclr), (! aclr));
	counter_ffa[].d = countera[10..0].combout;
	counter_ffa[].sclr = sclr;
	parity_ff.clk = clock;
	parity_ff.clrn = (! aclr);
	parity_ff.d = parity.combout;
	parity_ff.sclr = sclr;
	q[] = counter_ffa[].q;
	sclr = GND;
	updown = VCC;
END;
--VALID FILE

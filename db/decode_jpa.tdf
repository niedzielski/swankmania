--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=10 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 7.2 cbx_cycloneii 2007:06:13:15:47:32:SJ cbx_lpm_add_sub 2007:08:06:16:01:34:SJ cbx_lpm_compare 2007:06:21:15:54:06:SJ cbx_lpm_decode 2007:03:12:19:01:52:SJ cbx_mgl 2007:08:03:15:48:12:SJ cbx_stratix 2007:05:02:16:27:14:SJ cbx_stratixii 2007:06:28:17:26:26:SJ  VERSION_END


-- Copyright (C) 1991-2007 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_jpa
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[9..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[9..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode1151w[1..0]	: WIRE;
	w_anode1160w[3..0]	: WIRE;
	w_anode1177w[3..0]	: WIRE;
	w_anode1187w[3..0]	: WIRE;
	w_anode1197w[3..0]	: WIRE;
	w_anode1207w[3..0]	: WIRE;
	w_anode1217w[3..0]	: WIRE;
	w_anode1227w[3..0]	: WIRE;
	w_anode1237w[3..0]	: WIRE;
	w_anode1249w[1..0]	: WIRE;
	w_anode1256w[3..0]	: WIRE;
	w_anode1267w[3..0]	: WIRE;
	w_anode1277w[3..0]	: WIRE;
	w_anode1287w[3..0]	: WIRE;
	w_anode1297w[3..0]	: WIRE;
	w_anode1307w[3..0]	: WIRE;
	w_anode1317w[3..0]	: WIRE;
	w_anode1327w[3..0]	: WIRE;
	w_data1149w[2..0]	: WIRE;
	w_decout1158w	: WIRE;
	w_decout1254w	: WIRE;
	w_eq1159w[7..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[9..0] = eq_wire[9..0];
	eq_wire[] = ( ( w_anode1327w[3..3], w_anode1317w[3..3], w_anode1307w[3..3], w_anode1297w[3..3], w_anode1287w[3..3], w_anode1277w[3..3], w_anode1267w[3..3], w_anode1256w[3..3]), ( w_anode1237w[3..3], w_anode1227w[3..3], w_anode1217w[3..3], w_anode1207w[3..3], w_anode1197w[3..3], w_anode1187w[3..3], w_anode1177w[3..3], w_anode1160w[3..3]));
	w_anode1151w[] = ( (w_anode1151w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1160w[] = ( (w_anode1160w[2..2] & (! w_data1149w[2..2])), (w_anode1160w[1..1] & (! w_data1149w[1..1])), (w_anode1160w[0..0] & (! w_data1149w[0..0])), w_anode1151w[1..1]);
	w_anode1177w[] = ( (w_anode1177w[2..2] & (! w_data1149w[2..2])), (w_anode1177w[1..1] & (! w_data1149w[1..1])), (w_anode1177w[0..0] & w_data1149w[0..0]), w_anode1151w[1..1]);
	w_anode1187w[] = ( (w_anode1187w[2..2] & (! w_data1149w[2..2])), (w_anode1187w[1..1] & w_data1149w[1..1]), (w_anode1187w[0..0] & (! w_data1149w[0..0])), w_anode1151w[1..1]);
	w_anode1197w[] = ( (w_anode1197w[2..2] & (! w_data1149w[2..2])), (w_anode1197w[1..1] & w_data1149w[1..1]), (w_anode1197w[0..0] & w_data1149w[0..0]), w_anode1151w[1..1]);
	w_anode1207w[] = ( (w_anode1207w[2..2] & w_data1149w[2..2]), (w_anode1207w[1..1] & (! w_data1149w[1..1])), (w_anode1207w[0..0] & (! w_data1149w[0..0])), w_anode1151w[1..1]);
	w_anode1217w[] = ( (w_anode1217w[2..2] & w_data1149w[2..2]), (w_anode1217w[1..1] & (! w_data1149w[1..1])), (w_anode1217w[0..0] & w_data1149w[0..0]), w_anode1151w[1..1]);
	w_anode1227w[] = ( (w_anode1227w[2..2] & w_data1149w[2..2]), (w_anode1227w[1..1] & w_data1149w[1..1]), (w_anode1227w[0..0] & (! w_data1149w[0..0])), w_anode1151w[1..1]);
	w_anode1237w[] = ( (w_anode1237w[2..2] & w_data1149w[2..2]), (w_anode1237w[1..1] & w_data1149w[1..1]), (w_anode1237w[0..0] & w_data1149w[0..0]), w_anode1151w[1..1]);
	w_anode1249w[] = ( (w_anode1249w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1256w[] = ( (w_anode1256w[2..2] & (! w_data1149w[2..2])), (w_anode1256w[1..1] & (! w_data1149w[1..1])), (w_anode1256w[0..0] & (! w_data1149w[0..0])), w_anode1249w[1..1]);
	w_anode1267w[] = ( (w_anode1267w[2..2] & (! w_data1149w[2..2])), (w_anode1267w[1..1] & (! w_data1149w[1..1])), (w_anode1267w[0..0] & w_data1149w[0..0]), w_anode1249w[1..1]);
	w_anode1277w[] = ( (w_anode1277w[2..2] & (! w_data1149w[2..2])), (w_anode1277w[1..1] & w_data1149w[1..1]), (w_anode1277w[0..0] & (! w_data1149w[0..0])), w_anode1249w[1..1]);
	w_anode1287w[] = ( (w_anode1287w[2..2] & (! w_data1149w[2..2])), (w_anode1287w[1..1] & w_data1149w[1..1]), (w_anode1287w[0..0] & w_data1149w[0..0]), w_anode1249w[1..1]);
	w_anode1297w[] = ( (w_anode1297w[2..2] & w_data1149w[2..2]), (w_anode1297w[1..1] & (! w_data1149w[1..1])), (w_anode1297w[0..0] & (! w_data1149w[0..0])), w_anode1249w[1..1]);
	w_anode1307w[] = ( (w_anode1307w[2..2] & w_data1149w[2..2]), (w_anode1307w[1..1] & (! w_data1149w[1..1])), (w_anode1307w[0..0] & w_data1149w[0..0]), w_anode1249w[1..1]);
	w_anode1317w[] = ( (w_anode1317w[2..2] & w_data1149w[2..2]), (w_anode1317w[1..1] & w_data1149w[1..1]), (w_anode1317w[0..0] & (! w_data1149w[0..0])), w_anode1249w[1..1]);
	w_anode1327w[] = ( (w_anode1327w[2..2] & w_data1149w[2..2]), (w_anode1327w[1..1] & w_data1149w[1..1]), (w_anode1327w[0..0] & w_data1149w[0..0]), w_anode1249w[1..1]);
	w_data1149w[2..0] = data_wire[2..0];
	w_decout1158w = w_anode1151w[1..1];
	w_decout1254w = w_anode1249w[1..1];
	w_eq1159w[] = ( w_anode1237w[3..3], w_anode1227w[3..3], w_anode1217w[3..3], w_anode1207w[3..3], w_anode1197w[3..3], w_anode1187w[3..3], w_anode1177w[3..3], w_anode1160w[3..3]);
END;
--VALID FILE

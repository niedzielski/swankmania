--lpm_mux DEVICE_FAMILY="Cyclone II" LPM_SIZE=4 LPM_WIDTH=10 LPM_WIDTHS=2 data result sel
--VERSION_BEGIN 7.2 cbx_lpm_mux 2007:05:11:14:07:38:SJ cbx_mgl 2007:08:03:15:48:12:SJ  VERSION_END


-- Copyright (C) 1991-2007 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 20 
SUBDESIGN mux_kv7
( 
	data[39..0]	:	input;
	result[9..0]	:	output;
	sel[1..0]	:	input;
) 
VARIABLE 
	result_node[9..0]	: WIRE;
	sel_node[1..0]	: WIRE;
	w_data639w[3..0]	: WIRE;
	w_data669w[3..0]	: WIRE;
	w_data694w[3..0]	: WIRE;
	w_data719w[3..0]	: WIRE;
	w_data744w[3..0]	: WIRE;
	w_data769w[3..0]	: WIRE;
	w_data794w[3..0]	: WIRE;
	w_data819w[3..0]	: WIRE;
	w_data844w[3..0]	: WIRE;
	w_data869w[3..0]	: WIRE;
	w_result640w	: WIRE;
	w_result651w	: WIRE;
	w_result681w	: WIRE;
	w_result706w	: WIRE;
	w_result731w	: WIRE;
	w_result756w	: WIRE;
	w_result781w	: WIRE;
	w_result806w	: WIRE;
	w_result831w	: WIRE;
	w_result856w	: WIRE;
	w_result881w	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( (((w_data869w[1..1] & sel_node[0..0]) & (! w_result881w)) # (w_result881w & (w_data869w[3..3] # (! sel_node[0..0])))), (((w_data844w[1..1] & sel_node[0..0]) & (! w_result856w)) # (w_result856w & (w_data844w[3..3] # (! sel_node[0..0])))), (((w_data819w[1..1] & sel_node[0..0]) & (! w_result831w)) # (w_result831w & (w_data819w[3..3] # (! sel_node[0..0])))), (((w_data794w[1..1] & sel_node[0..0]) & (! w_result806w)) # (w_result806w & (w_data794w[3..3] # (! sel_node[0..0])))), (((w_data769w[1..1] & sel_node[0..0]) & (! w_result781w)) # (w_result781w & (w_data769w[3..3] # (! sel_node[0..0])))), (((w_data744w[1..1] & sel_node[0..0]) & (! w_result756w)) # (w_result756w & (w_data744w[3..3] # (! sel_node[0..0])))), (((w_data719w[1..1] & sel_node[0..0]) & (! w_result731w)) # (w_result731w & (w_data719w[3..3] # (! sel_node[0..0])))), (((w_data694w[1..1] & sel_node[0..0]) & (! w_result706w)) # (w_result706w & (w_data694w[3..3] # (! sel_node[0..0])))), (((w_data669w[1..1] & sel_node[0..0]) & (! w_result681w)) # (w_result681w & (w_data669w[3..3] # (! sel_node[0..0])))), (((w_data639w[1..1] & sel_node[0..0]) & (! w_result651w)) # (w_result651w & (w_data639w[3..3] # (! sel_node[0..0])))));
	sel_node[] = ( sel[1..0]);
	w_data639w[] = ( data[30..30], data[20..20], data[10..10], data[0..0]);
	w_data669w[] = ( data[31..31], data[21..21], data[11..11], data[1..1]);
	w_data694w[] = ( data[32..32], data[22..22], data[12..12], data[2..2]);
	w_data719w[] = ( data[33..33], data[23..23], data[13..13], data[3..3]);
	w_data744w[] = ( data[34..34], data[24..24], data[14..14], data[4..4]);
	w_data769w[] = ( data[35..35], data[25..25], data[15..15], data[5..5]);
	w_data794w[] = ( data[36..36], data[26..26], data[16..16], data[6..6]);
	w_data819w[] = ( data[37..37], data[27..27], data[17..17], data[7..7]);
	w_data844w[] = ( data[38..38], data[28..28], data[18..18], data[8..8]);
	w_data869w[] = ( data[39..39], data[29..29], data[19..19], data[9..9]);
	w_result640w = (((w_data639w[1..1] & sel_node[0..0]) & (! w_result651w)) # (w_result651w & (w_data639w[3..3] # (! sel_node[0..0]))));
	w_result651w = (((w_data639w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data639w[2..2])));
	w_result681w = (((w_data669w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data669w[2..2])));
	w_result706w = (((w_data694w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data694w[2..2])));
	w_result731w = (((w_data719w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data719w[2..2])));
	w_result756w = (((w_data744w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data744w[2..2])));
	w_result781w = (((w_data769w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data769w[2..2])));
	w_result806w = (((w_data794w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data794w[2..2])));
	w_result831w = (((w_data819w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data819w[2..2])));
	w_result856w = (((w_data844w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data844w[2..2])));
	w_result881w = (((w_data869w[0..0] & (! sel_node[1..1])) & (! sel_node[0..0])) # (sel_node[1..1] & (sel_node[0..0] # w_data869w[2..2])));
END;
--VALID FILE
